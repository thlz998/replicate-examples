#!/usr/bin/env python3
import sys
import tempfile
from huggingface_hub import login
import diffusers
import torch

# append project directory to path so predict.py can be imported
sys.path.append(".")

from predict import CACHE_DIR

with tempfile.TemporaryDirectory() as temp_dir:
    login(token="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")

    controlnet = diffusers.ControlNetModel.from_pretrained(
        # "monster-labs/control_v1p_sd15_qrcode_monster", torch_dtype=torch.float16, cache_dir=temp_dir
        "Nacholmo/controlnet-qr-pattern", torch_dtype=torch.float16, cache_dir=temp_dir
        # "DionTimmer/controlnet_qrcode-control_v1p_sd15", torch_dtype=torch.float16, cache_dir=temp_dir
    )
    # controlnet = [
    #     diffusers.ControlNetModel.from_pretrained("Nacholmo/controlnet-qr-pattern", torch_dtype=torch.float16, cache_dir=temp_dir),
    #     diffusers.ControlNetModel.from_pretrained("lllyasviel/control_v11p_sd15_canny", torch_dtype=torch.float16, cache_dir=temp_dir),
    #     # diffusers.ControlNetModel.from_pretrained("lllyasviel/control_v11p_sd15_openpose", torch_dtype=torch.float16, cache_dir=temp_dir),
    #     # diffusers.ControlNetModel.from_pretrained("lllyasviel/control_v11f1p_sd15_depth", torch_dtype=torch.float16, cache_dir=temp_dir),
    #     # diffusers.ControlNetModel.from_pretrained("lllyasviel/control_v11p_sd15_mlsd", torch_dtype=torch.float16, cache_dir=temp_dir),
    #     # diffusers.ControlNetModel.from_pretrained("lllyasviel/control_v11p_sd15_seg", torch_dtype=torch.float16, cache_dir=temp_dir),
    #     # diffusers.ControlNetModel.from_pretrained("lllyasviel/control_v11p_sd15_softedge", torch_dtype=torch.float16, cache_dir=temp_dir),
    # ]
    pipe = diffusers.StableDiffusionControlNetImg2ImgPipeline.from_pretrained(
        "stablediffusionapi/ghostmix",
        # "runwayml/stable-diffusion-v1-5",
        controlnet=controlnet,
        safety_checker=None,
        torch_dtype=torch.float16,
        cache_dir=temp_dir,
    )
    pipe.unet.load_attn_procs("sayakpaul/sd-model-finetuned-lora-t4", cache_dir=temp_dir)
    pipe.scheduler = diffusers.DPMSolverMultistepScheduler.from_config(
        pipe.scheduler.config, use_karras=True, algorithm_type="sde-dpmsolver++", cache_dir=temp_dir
    )
    pipe.save_pretrained(CACHE_DIR, safe_serialization=True)
